<?php

namespace Nuada\ApiBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserAgencyRepository
 *
 * This class was generated by the Doctrine ORM.
 */
class UserAgencyRepository extends EntityRepository
{
	/**
     * Retrieve All
     *
     * @param integer $id           - Id
     * @param integer $limit        - Limit
     * @param integer $offset       - Offset
     * @param string  $userId       - User id
     * @param string  $agencyId     - Agency id
     * @param boolean $withDeleted  - With deleted
     *
     * @return array
     */
    public function retrieveAll(
        $id=null,
        $limit=null,
        $offset=null,
        $userId=null,
        $agencyId=null,
        $withDeleted=false)
    {
        $qb = $this->createQueryBuilder('e');

        if (!is_null($id)) {
            $qb = $qb->andWhere('e.id = :id')
                ->setParameter('id', $id);
        }

        if (!$withDeleted) {
            $qb = $qb->andWhere('e.deleted = false');
        }

        if (!is_null($userId)) {
            $qb = $qb->andWhere('e.userId = :userId')
                ->setParameter('userId', $userId);
        }

        if (!is_null($agencyId)) {
            $qb = $qb->andWhere('e.agencyId = :agencyId')
                ->setParameter('agencyId', $agencyId);
        }

        if ($offset) {
            $qb->setMaxResults($limit);
            $qb->setFirstResult($offset);
        }

        if ($limit && !$offset) {
            $qb->setMaxResults($limit);
        }

        $query = $qb->getQuery();

        return $query->getResult();
    }

    /**
     * Fetch count
     *
     * @param integer $id           - Id
     * @param integer $limit        - Limit
     * @param integer $offset       - Offset
     * @param string  $userId       - User id
     * @param string  $agencyId     - Agency id
     * @param boolean $withDeleted  - With deleted
     *
     * @return array
     */
    public function fetchCount(
        $id=null,
        $userId=null,
        $agencyId=null,
        $withDeleted=false)
    {
        $qb = $this->createQueryBuilder('e')
            ->select('count(e)');

        if (!is_null($id)) {
            $qb = $qb->andWhere('e.id = :id')
                ->setParameter('id', $id);
        }

        if (!$withDeleted) {
            $qb = $qb->andWhere('e.deleted = false');
        }
        
        if (!is_null($userId)) {
            $qb = $qb->andWhere('e.userId = :userId')
                ->setParameter('userId', $userId);
        }

        if (!is_null($agencyId)) {
            $qb = $qb->andWhere('e.agencyId = :agencyId')
                ->setParameter('agencyId', $agencyId);
        }

        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }
}
